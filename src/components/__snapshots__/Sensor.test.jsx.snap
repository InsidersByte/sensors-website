exports[`Sensor should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <styled.div>
        sensor
    </styled.div>
    <SensorGraph
        data={
            Array [
                Object {
                  "time": "2016-08-25T10:13:53.000Z",
                  "value": 25.3,
                },
                Object {
                  "time": "2016-08-25T10:10:53.000Z",
                  "value": 25.1,
                },
              ]
        } />
    <styled.div>
        Lastest Reading
    </styled.div>
    <styled.div>
        25.3
    </styled.div>
    <styled.div>
        25th August 16, 11:13:53
    </styled.div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <styled.div>
            sensor
      </styled.div>
      <SensorGraph
            data={
                  Array [
                        Object {
                          "time": "2016-08-25T10:13:53.000Z",
                          "value": 25.3,
                        },
                        Object {
                          "time": "2016-08-25T10:10:53.000Z",
                          "value": 25.1,
                        },
                      ]
            } />
      <styled.div>
            Lastest Reading
      </styled.div>
      <styled.div>
            25.3
      </styled.div>
      <styled.div>
            25th August 16, 11:13:53
      </styled.div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Sensor
        sensor={
                Object {
                        "data": Array [
                          Object {
                            "time": "2016-08-25T10:13:53.000Z",
                            "value": 25.3,
                          },
                          Object {
                            "time": "2016-08-25T10:10:53.000Z",
                            "value": 25.1,
                          },
                        ],
                        "name": "sensor",
                      }
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "sensor": Object {
            "data": Array [
              Object {
                "time": "2016-08-25T10:13:53.000Z",
                "value": 25.3,
              },
              Object {
                "time": "2016-08-25T10:10:53.000Z",
                "value": 25.1,
              },
            ],
            "name": "sensor",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <styled.div>
                    sensor
          </styled.div>
          <SensorGraph
                    data={
                              Array [
                                        Object {
                                          "time": "2016-08-25T10:13:53.000Z",
                                          "value": 25.3,
                                        },
                                        Object {
                                          "time": "2016-08-25T10:10:53.000Z",
                                          "value": 25.1,
                                        },
                                      ]
                    } />
          <styled.div>
                    Lastest Reading
          </styled.div>
          <styled.div>
                    25.3
          </styled.div>
          <styled.div>
                    25th August 16, 11:13:53
          </styled.div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <styled.div>
                    sensor
          </styled.div>
          <SensorGraph
                    data={
                              Array [
                                        Object {
                                          "time": "2016-08-25T10:13:53.000Z",
                                          "value": 25.3,
                                        },
                                        Object {
                                          "time": "2016-08-25T10:10:53.000Z",
                                          "value": 25.1,
                                        },
                                      ]
                    } />
          <styled.div>
                    Lastest Reading
          </styled.div>
          <styled.div>
                    25.3
          </styled.div>
          <styled.div>
                    25th August 16, 11:13:53
          </styled.div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Sensor
    sensor={
        Object {
            "data": Array [
              Object {
                "time": "2016-08-25T10:13:53.000Z",
                "value": 25.3,
              },
              Object {
                "time": "2016-08-25T10:10:53.000Z",
                "value": 25.1,
              },
            ],
            "name": "sensor",
          }
    } />,
}
`;
